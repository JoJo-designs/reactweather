{"version":3,"sources":["components/searchbar.js","components/images/802.svg","components/images/800.svg","components/images/803.svg","components/images/601.svg","components/images/501.svg","components/images/502.svg","components/fiveDay.js","components/images/302.svg","components/body.js","components/history.js","components/images/background.jpg","components/header.js","app.js","components/DBConfig.js","index.js"],"names":["SearchBar","props","useState","searchValue","setSearchValue","a","fetch","res","json","data","NewHistory","sendState","console","log","alert","onChange","add","useIndexedDB","cityName","name","countryCode","country","lat","lon","then","event","error","changeState","setUseAdvanced","useAdvanced","advCity","setAdvCity","advCountry","setAdvCountry","className","placeholder","value","type","inputValue","target","onClick","FiveDay","fiveday","day","fiveDay","splice","map","dt","moment","format","Math","floor","temp","humidity","id","weather","src","lightRain","alt","heavyRain","snow","sunny","scatteredClouds","brokenClouds","description","Body","cityData","appData","setAppData","useEffect","hasData","fetchData","toUpperCase","substring","capitalize","current","round","wind_speed","uvi","selectImage","daily","History","getAll","history","setHistory","handleClick","Header","setCityData","style","backgroundImage","backgroundImg","App","initDB","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","option","unique","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab936ed5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useIndexedDB } from 'react-indexed-db';\nimport '../styles/searchbar.css'\n\nexport default function SearchBar(props) {\n\n    const [ searchValue, setSearchValue ] = useState('')\n\n\n\n    const handleChange = (event) => {\n        const { target } = event;\n        const inputValue = target.value;\n        const inputType = target.name;\n\n        if (inputType === \"searchValue\") {\n            setSearchValue(inputValue)\n        }\n    }\n\n    async function getGeo() {\n        try {\n            const res = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${searchValue}&appid=89e0b7e8dbbac9434ed75176dac7f8a3`)\n            const data = await res.json()\n            NewHistory(data)\n            sendState(data)\n        } catch (error) {\n            console.log(error)\n            alert(\"We ran into an issue. The inputted name may not be correct or no value was entered. please try again.\")\n        }\n    }\n\n    const sendState = (data) => {\n        props.onChange(data)\n    }\n    \n         const NewHistory = (data) => {\n        console.log(data)\n        const { add } = useIndexedDB('cities')\n        add({cityName: data[0].name, countryCode: data[0].country, lat: data[0].lat, lon: data[0].lon}).then(\n            event => {\n                console.log('ID Generated: ', event)\n            },\n            error => {\n                console.log(error)\n            }\n        );\n    };\n\n    const changeState = () => {\n        console.log(\"state will be changed\")\n        if (useAdvanced === false) {\n            setUseAdvanced(true)\n        } else {\n            setUseAdvanced(false)\n        }\n    }\n\n\n    // advance search test\n\n    const [ useAdvanced, setUseAdvanced ] = useState(false)\n    const [advCity, setAdvCity] = useState('')\n    const [advCountry, setAdvCountry] = useState('')\n\n    console.log(advCity, advCountry)\n\n    // changes the country\n    const handleCountry = (event) => {\n        const { target } = event;\n        const inputValue = target.value;\n\n        setAdvCountry(inputValue)\n    }\n\n    // changes the city name in advanced search\n    const handleCityName = (event) => {\n        const{ target } = event\n        const inputValue = target.value;\n\n       setAdvCity(inputValue)\n    }\n\n    async function getAdvanced() {\n        console.log(\"advance search active\")\n        try {\n            const res = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${advCity},${advCountry}&appid=89e0b7e8dbbac9434ed75176dac7f8a3`)\n            const data = await res.json()\n            // console.log(data)\n            NewHistory(data)\n            sendState(data)\n        } catch (error) {\n            console.log(error)\n            alert(\"We ran into an issue. The inputted name may not be correct or no values were entered. please try again.\")\n        }\n    }\n\n\n    return (\n        <div className=\"searchBox\">\n\n            {/* Advanced search functionality Appears and disappears onClick */}\n            \n            { useAdvanced ? \n            <div className=\"advancedSearch\">\n                \n\n                <input \n                className=\"Advinputbox\"\n                placeholder=\"Search a City\"\n                value={advCity}\n                name=\"advCity\"\n                type=\"text\"\n                onChange={handleCityName}\n                ></input>\n\n                <select className=\"AdvSelect\" name=\"country\" onChange={handleCountry}>\n                    <option value=\"None\">Country</option>\n                    <option value=\"CA\" >Canada</option>\n                    <option value=\"US\">USA</option>\n                    <option value=\"GB\">UK</option>\n                </select>\n                <button className=\"searchBtn\" onClick={getAdvanced}>Search</button>\n                <button className=\"Advance\" onClick={changeState}>Basic Search</button>\n            </div> \n            : \n            <div>\n                <input \n            className=\"inputbox\"\n            placeholder=\"Search a City\"\n            value={searchValue}\n            name=\"searchValue\"\n            type=\"text\"\n            onChange={handleChange}\n            >  \n            </input>\n            <button onClick={getGeo} className=\"searchBtn\">Search</button>\n            <button className=\"Advance\" onClick={changeState}>Advanced Search</button>\n            </div>}\n        \n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/802.e7dd3721.svg\";","export default __webpack_public_path__ + \"static/media/800.41c6c635.svg\";","export default __webpack_public_path__ + \"static/media/803.e6537cfd.svg\";","export default __webpack_public_path__ + \"static/media/601.80108998.svg\";","export default __webpack_public_path__ + \"static/media/501.200911b6.svg\";","export default __webpack_public_path__ + \"static/media/502.69228fb0.svg\";","import React from 'react';\nimport '../styles/body.css'\nimport moment from 'moment'\nimport scatteredClouds from './images/802.svg'\nimport sunny from './images/800.svg'\nimport brokenClouds from './images/803.svg'\nimport snow from './images/601.svg'\nimport lightRain from './images/501.svg'\nimport heavyRain from './images/502.svg'\n\nexport default function FiveDay(fiveday) {\n    let day = fiveday.fiveDay.splice(1,5)\n    console.log(day)\n\nconst convertTime = (dt) => {\n    dt = dt * 1000\n    const format = moment(dt).format(\"MMM Do YYYY\")\n    return format\n}\n\nconst selectImage = (id) => { \n    console.log(id)\n    \n        if (id === 301 ||id === 500 || id === 501) {\n            return <img className=\"smallerImg\" src={lightRain} alt=\"cloud with light rain\"></img>\n        }\n        if (id === 502) {\n            return <img className=\"smallerImg\" src={heavyRain} alt=\"cloud with heavy rain\"></img>\n        }\n        if (id === 600 || id === 601 || id === 616) {\n            return <img className=\"smallerImg\" src={snow} alt=\"cloud with snow\"></img>\n        }\n        if (id === 800) {\n            return <img className=\"smallerImg\" src={sunny} alt=\"Sunny weather\"></img>\n        }\n        if (id === 801 || id === 802 || id === 803) {\n            return <img className=\"smallerImg\" src={scatteredClouds} alt=\"Cloudy weather\"></img>\n        }\n        if (id === 804) {\n            return <img className=\"smallerImg\" src={brokenClouds} alt=\"Few Clouds\"></img>\n        }\n}\n \n   return(\n       <div>\n           <h3 className=\"five\">Five Day Forecast </h3>\n           {day.map((value) => \n           <div className=\"fiveBoxes\" key={value.dt}>\n               <div className=\"infoBox\">\n                    <p className=\"date\">{convertTime(value.dt)}</p>\n                    <p className=\"dailytext\">Temp: {Math.floor(value.temp.day)}</p>\n                    <p className=\"dailytext\">Humidity: {Math.floor(value.humidity)}</p>\n               </div>\n                <aside className=\"centerImg\">{selectImage(value.weather[0].id)}\n                <p className=\"dailytext\">{value.weather[0].description}</p>\n                </aside>\n                \n           </div>\n\n           )}\n       </div>\n   )\n}","export default __webpack_public_path__ + \"static/media/302.69228fb0.svg\";","import React, { useState, useEffect } from 'react';\n// import Moment from 'react-moment';\nimport FiveDay from './fiveDay';\nimport '../styles/body.css'\nimport '../styles/alignment.css'\nimport scatteredClouds from './images/802.svg'\nimport sunny from './images/800.svg'\nimport brokenClouds from './images/803.svg'\nimport snow from './images/601.svg'\nimport lightRain from './images/501.svg'\nimport heavyRain from './images/302.svg'\n\n\nexport default function Body(cityData) {\n\n    const [ appData, setAppData ] = useState('')\n\n    async function fetchData() {\n        console.log(cityData.cityData.lat)\n        try {\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${cityData.cityData.lat}&lon=${cityData.cityData.lon}&exclude=minutely,hourly,alerts&units=metric&appid=89e0b7e8dbbac9434ed75176dac7f8a3`)\n            const weather = await res.json()\n            console.log(weather)\n            setAppData(weather)\n        } catch (error) {\n            console.log(error)\n            alert(\"We ran into an issue. Please try again.\")\n        }\n    }\n    useEffect( () => {\n        if(cityData.cityData.hasData === true) {\n            fetchData()\n        }\n    }, [cityData]);\n\n\n    const capitalize = () => {\n        const name = cityData.cityData.cityName\n        return name[0].toUpperCase() + name.substring(1)\n    }\n\n    // uvIndex will find the uv index and return it with the class that matches \n    // level\n    const uvIndex = () => {\n        if (appData.current.uvi < 3) {\n            console.log(\"UV is Low\")\n            return ( <h3 className=\" uv low\">UV Index: {appData.current.uvi}</h3> )\n        }\n        if (appData.current.uvi < 4 &&  appData.current.uvi > 7) {\n            console.log(\"UV is Mid\")\n            return ( <h3 className=\" uv mid\">UV Index: {appData.current.uvi}</h3> )\n        }\n        if (appData.current.uvi > 8) {\n            console.log(\"UV is High\")\n            return ( <h3 className=\" uv high\">UV Index: {appData.current.uvi}</h3> )\n        }\n    }\n\n    // selectImage use weather data and returns a matching image. the images the api\n    // provides are very small. \n    const selectImage = () => { \n        const id = appData.current.weather[0].id\n        \n        if (id === 301 ||id === 500 || id === 501) {\n            return <img className=\"smallerImg\" src={lightRain} alt=\"cloud with light rain\"></img>\n        }\n        if (id === 502) {\n            return <img className=\"smallerImg\" src={heavyRain} alt=\"cloud with heavy rain\"></img>\n        }\n        if (id === 600 || id === 601 || id === 616) {\n            return <img className=\"smallerImg\" src={snow} alt=\"cloud with snow\"></img>\n        }\n        if (id === 800) {\n            return <img className=\"smallerImg\" src={sunny} alt=\"Sunny weather\"></img>\n        }\n        if (id === 801 || id === 802 || id === 803) {\n            return <img className=\"smallerImg\" src={scatteredClouds} alt=\"Cloudy weather\"></img>\n        }\n        if (id === 804) {\n            return <img className=\"smallerImg\" src={brokenClouds} alt=\"Few Clouds\"></img>\n        }\n      \n    }\n    \n\n    return(\n        \n        <div >\n            { appData ?  \n            <div>\n            <div className=\"forecast\">\n                <h2 className=\"bodyHeader\">{capitalize()} Current Forecast</h2>\n                {/* dataBox wraps all the data */}\n                <div className=\"dataBox\"> \n                {/* data only wraps the data displayed with word */}\n                <div className=\"data\">\n                {/* <Moment format=\"ddd MMM, D\"></Moment> */}\n                <h3>Temp: {Math.floor(appData.current.temp)}</h3>\n                <h3>Humidity: {Math.round(appData.current.humidity)}</h3>\n                <h3>Wind Speed: {Math.round(appData.current.wind_speed)}</h3>\n                <div>{uvIndex()}</div>\n                </div>\n                {/* weatherImg is just the image */}\n                <div className=\"weatherImg\">{selectImage()}\n                <p>{appData.current.weather[0].description}</p>\n                </div>\n                </div>\n                </div>\n\n                {/* this is the five day forecast  */}\n                <div>\n                    <FiveDay fiveDay={appData.daily}/>\n                </div>\n    \n                \n            </div> \n            :\n            <h2>Waiting for data...</h2>\n            }\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useIndexedDB } from 'react-indexed-db';\nimport '../styles/searchbar.css'\n\nexport default function History(props) {\n    const { getAll } = useIndexedDB('cities')\n    const [history, setHistory] = useState('')\n\n    useEffect(() => {\n        getAll().then(data => {\n            setHistory(data)\n        });\n    }, [history]);\n\n    const handleClick = (data) => {\n        sendState(data)\n    }\n\n    const sendState = (data) => {\n        props.onChange(data)\n    }\n    \n    return(\n        <div>\n            { history ? \n            <div>\n                {history.map((data) => (\n                    <button className=\"historyBtns\" key={data.id} \n                    onClick={() => handleClick(data)}\n                    >{data.cityName}, {data.countryCode}</button>\n                ))}\n            </div>\n            :\n            <div><h4> waiting... </h4></div>\n            } \n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/background.3b5a2f62.jpg\";","import React, { useState } from 'react';\nimport SearchBar from './searchbar';\nimport Body from './body';\nimport History from './history';\n// import '../styles/skeleton.css'\nimport '../styles/style.css'\nimport '../styles/alignment.css'\nimport backgroundImg from './images/background.jpg'\n\n\n\nexport function Header() {\n\n    const [cityData, setCityData] = useState({\n        cityName: '',\n        lat: '',\n        lon: '',\n        hasData: false\n    })\n\n    function handleUpdate(data) {\n        setCityData({cityName: data[0].name, lat: data[0].lat, lon: data[0].lon, hasData: true})\n    }\n\n    function UpdateHistory(data) {\n        setCityData({cityName: data.cityName, lat: data.lat, lon: data.lon, hasData: true})\n    }\n\n    const isData = () => {\n        if (cityData.hasData === true) {\n            return <Body cityData={cityData}/>\n        } else {\n            return <h3>No data yet</h3>\n        }\n    }\n\n    return (\n\n        // style={{ backgroundImage: `url(${backgroundImg})`}}\n    <div>\n        <h1 className=\"header\">Weather Dashboard</h1>\n        \n        <div>\n            {/* section is around everything */}\n        <section className=\"container\">   \n            {/* this part is components that take a user input */}\n            <div className=\"oneThrid\">\n        <SearchBar cityData={cityData} onChange={handleUpdate}/>\n        <History cityData={cityData} onChange={UpdateHistory}/>\n            </div>\n\n        {/* this part doesn't take user inputs */}\n         <div className=\"twoThrids bg\" style={{ backgroundImage: `url(${backgroundImg})`}}>\n            {isData()}\n        </div>\n\n        </section> \n\n        </div>\n    </div>\n    );\n};\n\n","import { Header } from './components/header';\nimport { DBConfig } from './components/DBConfig';\nimport { initDB } from 'react-indexed-db';\n\ninitDB(DBConfig);\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n    </div>\n  );\n}","export const DBConfig = {\n    name: 'citiesDB',\n    version: 1,\n    objectStoresMeta: [\n        {\n            store: 'cities',\n            storeConfig: { keyPath: 'id', autoIncrement: true },\n            storeSchema: [\n                {name: 'cityName', keyPath: 'cityName', option: {unique: true}},\n                {name: 'countryCode', keyPath: 'countryCode'},\n                {name: 'lat', keyPath: 'lat', option: {unique: true}},\n                {name: 'lon', keyPath: 'lon', option: {unique: true}}\n            ]\n        }\n    ]\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}